[{"C:\\Code\\htne\\OMi\\react-frontend\\src\\index.js":"1","C:\\Code\\htne\\OMi\\react-frontend\\src\\App.js":"2","C:\\Code\\htne\\OMi\\react-frontend\\src\\reportWebVitals.js":"3","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Ask.js":"4","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Controls.js":"5","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Search.js":"6","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Sym.js":"7","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Disease.js":"8","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\PageWrap.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":266,"mtime":1610843914070,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":630,"mtime":1610828487308,"results":"14","hashOfConfig":"11"},{"size":5057,"mtime":1610842725150,"results":"15","hashOfConfig":"11"},{"size":1251,"mtime":1610798748955,"results":"16","hashOfConfig":"11"},{"size":2001,"mtime":1610845047712,"results":"17","hashOfConfig":"11"},{"size":862,"mtime":1610829217877,"results":"18","hashOfConfig":"11"},{"size":323,"mtime":1610843894861,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1sjfojh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Code\\htne\\OMi\\react-frontend\\src\\index.js",[],["41","42"],"C:\\Code\\htne\\OMi\\react-frontend\\src\\App.js",[],"C:\\Code\\htne\\OMi\\react-frontend\\src\\reportWebVitals.js",[],"C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Ask.js",[],"C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Controls.js",["43","44","45","46"],"import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Search from './Search';\r\n\r\nimport Sym from './Sym';\r\n\r\nimport Disease from './Disease';\r\n\r\nimport Ask from './Ask';\r\n\r\n\r\nconst OuterWrap = styled.div`\r\n\r\n    height: 100%;\r\n    background: #2d2d2e;\r\n\r\n`;\r\n\r\n\r\nclass Controls extends React.Component{\r\n\r\n    state = {\r\n        isLoaded: false,\r\n        symptomBranch: [\"Headache\", \"Cough\", \"Clammy Skin\", \"Throat Sore\"],\r\n        searchItems: [],\r\n        control: 0,\r\n        diseased: false,\r\n        dname: \"unset\",\r\n        ddesc: \"unset\",\r\n        blacklist: [],\r\n        final: 0\r\n    }\r\n\r\n    componentDidMount() {  \r\n        fetch(\"http://localhost:8080/autocomplete\")\r\n          .then(res => res.json())\r\n              .then(\r\n                  (result) => {\r\n                          this.setState({searchItems: result.Symptoms});\r\n                  }\r\n              )  \r\n    }\r\n\r\n    searchFound = (name) => {\r\n        fetch(\"http://localhost:8080/disease/\"+name)\r\n            .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                         this.setState({symptomBranch: result.data});\r\n                    }\r\n                )  \r\n\r\n            this.setState({control: 1});\r\n                \r\n    }\r\n\r\n    render() {\r\n\r\n        let display = [];\r\n        let c = 0;\r\n        for (let i = 0; i < this.state.symptomBranch.length; i++) {\r\n\r\n            \r\n\r\n            let inBL = false;\r\n            if (this.state.blacklist[0] !== undefined)\r\n            for (let z = 0; z < this.state.blacklist.length; z++) {\r\n   \r\n                if (this.state.symptomBranch[i].toLowerCase() === this.state.blacklist[z].toLowerCase()){\r\n                    inBL = true;\r\n                    console.log(\"was hre\");\r\n                }\r\n                \r\n            }\r\n\r\n            if (inBL) continue;\r\n\r\n            c++;\r\n            display.push(this.state.symptomBranch[i]);\r\n            if (c == 4) break;\r\n\r\n            //console.log(\"render log: \" + display[i]);\r\n\r\n\r\n        }\r\n        let a = <section> </section>;\r\n        let r = <Disease name = {this.state.dname} desc = {this.state.ddesc} />\r\n        if (this.state.diseased === false) {\r\n\r\n            a = <Ask />;\r\n            r = \r\n\r\n                display.map(s => (\r\n                <Sym click = {this.remove} type = {s} key = {s} />\r\n\r\n                \r\n            ));\r\n        } else {\r\n            console.log(\"##\" + this.state.ddesc);\r\n        }\r\n        \r\n\r\n        return <OuterWrap>\r\n            {a}\r\n            {r}\r\n        </OuterWrap>;\r\n\r\n    }\r\n\r\n    remove = (type) => {\r\n\r\n\r\n        let pq = [...this.state.blacklist];\r\n        pq.push(type);\r\n\r\n        type = type.replace(\" \", \"%20\");\r\n        let ddname = \"\";\r\n        let dddesc = \"\";\r\n        let ddd = false;\r\n    \r\n        let temp = [\"\", \"\", \"\", \"\"];\r\n        console.log(\" --- \" + type);\r\n        fetch(\"http://localhost:8080/disease/\"+type.toLowerCase())\r\n            .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                            console.log(\"Disease data val: \" + result.data.disease);\r\n                            if (result.data.disease != undefined){\r\n                                temp = \"\";\r\n                                console.log(\"OAISDHIAHDSA\");\r\n                                ddname = result.data.disease;\r\n                                dddesc =  result.data.description;\r\n                                ddd = true;\r\n\r\n                                //this.setState({final: true});\r\n                                this.setState({diseased: ddd, dname: ddname, ddesc: dddesc, blacklist: pq});\r\n\r\n                            } else {\r\n\r\n\r\n                                temp = [];\r\n\r\n                                console.log(result.data);\r\n\r\n                                if (result.data.symptoms != undefined) {\r\n                                    for (let z = 0; z < result.data.symptoms.length; z++) {\r\n                                    \r\n                                        temp.push(result.data.symptoms[z]);\r\n                                    }\r\n\r\n                                } else\r\n                                for (let z = 0; z < result.data.length; z++) {\r\n                                    \r\n                                    temp.push(result.data[z]);\r\n                                }\r\n\r\n                                \r\n\r\n                            }\r\n                    }\r\n                )   \r\n            \r\n        /*for (let i = 0; i < temp.length; i++){\r\n            //console.log(temp[i].type + \"-\" + type);\r\n            if (temp[i].type === type){\r\n                \r\n                temp.splice(i, 1);\r\n                break;\r\n            }\r\n        }*/\r\n\r\n        \r\n        setTimeout(() => {\r\n            console.log(\"ddd: \" + ddd);\r\n            this.setState({symptomBranch: temp, diseased: ddd, dname: ddname, ddesc: dddesc, blacklist: pq});\r\n\r\n        }, 900);\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Controls;","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Search.js",["47","48"],"import React, {useState} from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete'\r\n\r\n\r\n\r\nfunction Search(props) {   \r\n\r\n\r\n                const handleOnSearch = (string, cached) => {\r\n                    // onSearch returns the string searched and if\r\n                    // the values are cached. If the values are cached\r\n                    // \"cached\" contains the cached values, if not, returns false\r\n                    console.log(string, cached)\r\n                  }\r\n                \r\n                  const handleOnSelect = (item) => {\r\n                    // the item selected\r\n                    console.log(item)\r\n\r\n                    props.found(item.name);\r\n\r\n                  }\r\n                \r\n                  const handleOnFocus = () => {\r\n                    console.log('Focused');\r\n                  }\r\n                \r\n\r\n        return (\r\n         <div>\r\n            <ReactSearchAutocomplete\r\n            items={props.items}\r\n            onSearch={handleOnSearch}\r\n            onSelect={handleOnSelect}\r\n            onFocus={handleOnFocus}\r\n            autoFocus\r\n          />\r\n        </div>\r\n        )\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\nexport default Search;","C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Sym.js",["49","50"],"C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\Disease.js",[],"C:\\Code\\htne\\OMi\\react-frontend\\src\\components\\PageWrap.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":82,"column":19,"nodeType":"61","messageId":"62","endLine":82,"endColumn":21},{"ruleId":"59","severity":1,"message":"63","line":130,"column":53,"nodeType":"61","messageId":"62","endLine":130,"endColumn":55},{"ruleId":"59","severity":1,"message":"63","line":147,"column":58,"nodeType":"61","messageId":"62","endLine":147,"endColumn":60},{"ruleId":"55","severity":1,"message":"64","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"55","severity":1,"message":"65","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":63,"column":29,"nodeType":"61","messageId":"62","endLine":63,"endColumn":31},{"ruleId":"66","severity":1,"message":"67","line":91,"column":21,"nodeType":"68","endLine":91,"endColumn":34},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'styled' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]